services:
  web:
    image: web
    build:
      context: .
      dockerfile: Dockerfile-dev
    command: "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - 8000:8000
      - 3000:3000
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=main_db
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "user", "-d", "main_db"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  redis:
    image: redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: celery_worker
    command: /start_worker.sh
    volumes:
      - .:/app
    env_file:
      - .env.dev
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: celery_beat
    command: /start_beat.sh
    volumes:
      - .:/app
    env_file:
      - .env.dev
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: celery_flower
    command: /start_flower.sh
    volumes:
      - .:/app
    env_file:
      - .env.dev
    ports:
      - 5555:5555
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  redis_data:
